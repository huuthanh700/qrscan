import React, { Component } from 'react';
import { AsyncStorage, CameraRoll, View, Text, TextInput, Platform, StyleSheet, Dimensions, TouchableOpacity, Image, ScrollView, TouchableWithoutFeedback, Keyboard, Alert, PermissionsAndroid } from 'react-native';
import Headers from '../Header';
import Ionicons from 'react-native-vector-icons/dist/Ionicons';
import QRCode from 'react-native-qrcode-svg';
import Share from 'react-native-share';
import RNFS from "react-native-fs";
import { AdMobBanner } from 'react-native-admob';

const width = Dimensions.get('window').width;
const height = Dimensions.get('window').height;

export default class GenerateQrCode extends Component {
    constructor(props) {
        super(props)
        this.state = {
            value: '',
            genQR: false,
            showAds: false
        }
    }

    requestStoragePermission = async () => {
        try {
            const granted = await PermissionsAndroid.request(
                PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE
            )
            if (granted === PermissionsAndroid.RESULTS.GRANTED || granted === true) {
                console.log("You can use the storage")
                this.saveQrToDisk();
            } else {
                Alert.alert('Notification', 'This app need permission for save.', [{ text: 'Ok' }]);
            }
        } catch (err) {
            console.warn(err)
        }
    }

    saveQrToDisk() {
        if (this.svg) {
            this.svg.toDataURL((data) => {
                RNFS.writeFile(RNFS.CachesDirectoryPath + "/truth-gen-qrcode.png", data, 'base64')
                    .then((success) => {
                        return CameraRoll.saveToCameraRoll(RNFS.CachesDirectoryPath + "/truth-gen-qrcode.png", 'photo')
                    })
                    .then(() => {
                        Alert.alert('Notification', 'Saved!', [{ text: 'Ok' }]);
                    }).catch((error) => {
                        Alert.alert('Notification', 'This app need permission for save.', [{ text: 'Ok' }]);
                    });
            });
        } else {
            console.log("svg null");
        }
    }

    shareResult = async () => {
        try {
            const value = await AsyncStorage.getItem('shareIndex');
            console.log(value)
            if (value !== null) {
                valueInt = parseInt(value);
                if (valueInt >= 2) {
                    valueInt = 0;
                    await AsyncStorage.setItem('shareIndex', valueInt + '');
                    this.openShareQrcode();
                    this.setState({ showAds: true })
                } else {
                    valueInt = valueInt + 1;
                    await AsyncStorage.setItem('shareIndex', valueInt + '');
                    this.openShareQrcode();
                    this.setState({ showAds: false })
                }
            } else {
                try {
                    await AsyncStorage.setItem('shareIndex', '0');
                    this.openShareQrcode();
                } catch (error) {
                    // Error saving data
                    this.openShareQrcode();
                }
            }
        } catch (error) {
            this.openShareQrcode();
        }
    }

    openShareQrcode() {
        this.svg.toDataURL((base64) => {
            console.log(base64)
            Share.open({
                message: "QR code generated by TruthTeam",
                url: 'data:image/png;base64,' + base64,
            }).then((respone) => {
                console.log(respone)
            })
        });
    }

    saveRef(data) {
        this.svg = data;
    }

    genQRcode(value) {
        if (value.trim() !== '') {
            this.setState({ genQR: true })
        } else {
            Alert.alert('Notification', 'Empty text, try again !!', [{ text: 'Ok' }]);
        }
    }

    render() {
        let logoFromFile = require('../assets/QRAppIcon.png');

        return (
            <View style={{ flex: 1 }}>
                <Headers title='Generate QR code' backIcon={true} navigation={this.props.navigation} />
                <ScrollView>
                    <View style={{ padding: 10 }}>
                        <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>
                            <TextInput
                                style={{ height: 100, padding: 10, backgroundColor: 'white', borderRadius: 5, fontSize: 16 }}
                                underlineColorAndroid='transparent'
                                placeholder="Enter value for gen QR code here"
                                placeholderTextColor={'#50666'}
                                onChangeText={(value) => {
                                    this.setState({ genQR: false, value: value })
                                }}
                                multiline={true}
                                value={this.state.value}
                                returnKeyType='go'
                                maxLength={300}>
                            </TextInput>
                        </TouchableWithoutFeedback>
                    </View>
                    <View
                        style={{ alignItems: 'center' }}>
                        <Ionicons name='md-arrow-round-down'
                            style={{ color: '#03A9F4', width: 30, height: 40, fontSize: 40, backgroundColor: 'transparent' }} />
                    </View>
                    <View
                        style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
                        <Text style={{ fontSize: 16, fontFamily: "OpenSans-Semibold" }}>QR code generate here</Text>
                        {this.state.genQR ?
                            <View
                                style={{
                                    flex: 1, marginTop: 10, backgroundColor: 'white', padding: 5,
                                }}>
                                <QRCode
                                    value={this.state.value}
                                    logo={logoFromFile}
                                    logoBackgroundColor='#536DFE'
                                    logoSize={25}
                                    logoBorderRadius={40}
                                    logoMargin={10}
                                    size={250}
                                    color='black'
                                    getRef={(data) => { this.saveRef(data) }}
                                />
                            </View>
                            : <View
                                style={{
                                    flex: 1,
                                    width: 250, height: 250, marginTop: 10, backgroundColor: 'white', padding: 5
                                }}>
                            </View>}
                        <View style={{ width, justifyContent: 'center', alignItems: 'center', marginTop: 10 }}>
                            <AdMobBanner
                                adSize="smartBannerPortrait"
                                adUnitID="ca-app-pub-4614657181481018/5479480678"
                            // adUnitID="ca-app-pub-3940256099942544/6300978111"
                            />
                        </View>
                    </View>
                </ScrollView>
                {!this.state.genQR ?
                    <TouchableOpacity
                        style={style.button}
                        onPress={() => { this.genQRcode(this.state.value) }}>
                        <Text style={style.buttonText} > Generate</Text>
                    </TouchableOpacity>
                    : <View
                        style={{ width, position: 'absolute', bottom: 0, flexDirection: 'row' }}>
                        <TouchableOpacity
                            style={[style.buttonShare]}
                            onPress={() => { Platform.OS === 'android' ? this.requestStoragePermission() : this.saveQrToDisk() }}>
                            <Text style={style.buttonText}>Save</Text>
                        </TouchableOpacity>
                        <TouchableOpacity
                            style={[style.buttonShare]}
                            onPress={() => { this.shareResult() }}>
                            <Text style={style.buttonText}>Share</Text>
                        </TouchableOpacity>
                    </View>}
                {this.state.showAds ?
                    <View style={{
                        backgroundColor: 'rgba(0,0,0,0.8)', position: 'absolute', top: 0, left: 0, right: 0,
                        width, height, justifyContent: 'center', alignItems: 'center'
                    }}>
                        <TouchableOpacity
                            style={{
                                position: 'absolute', top: 10, right: 10, padding: 5,
                                backgroundColor: '#03A9F4', borderWidth: 1,
                                borderRadius: 10, borderColor: '#03A9F4', justifyContent: 'center', alignItems: 'center'
                            }}
                            onPress={() => { this.setState({ showAds: false }) }}>
                            <Text style={{ color: 'white' }}>Close Ads</Text>
                        </TouchableOpacity>
                        <AdMobBanner
                            adSize="mediumRectangle"
                            // adUnitID="ca-app-pub-3940256099942544/6300978111"
                            adUnitID="ca-app-pub-4614657181481018/5479480678"
                        />
                    </View>
                    : null}
            </View >
        )
    }
}

const style = StyleSheet.create({
    buttonText: {
        paddingVertical: 12,
        color: '#fff',
        fontSize: 16,
        textAlign: 'center',
        fontFamily: "OpenSans-Semibold",
    },
    button: {
        justifyContent: 'center',
        alignItems: 'center',
        fontFamily: 'OpenSans-Semibold',
        backgroundColor: '#03A9F4',
        height: 45,
        borderWidth: 1,
        borderRadius: 10,
        margin: 5,
        borderColor: '#03A9F4',
        position: 'absolute', bottom: 0, left: 0, right: 0, padding: 10
    },
    buttonShare: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        fontFamily: 'OpenSans-Semibold',
        backgroundColor: '#03A9F4',
        height: 45,
        borderWidth: 1,
        borderRadius: 10,
        borderColor: '#03A9F4',
        margin: 5,
        padding: 5
    }
});